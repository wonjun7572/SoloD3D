*수업내용*

2022-11-02

기초 프레임워크 제작
라이브러리 추가
guid, input8, d3d11
구조체로 창 세팅하기 위해 제작
백퍼버 사이즈, 뷰포트 사이즈
hInst도 graphicDesc에 넣어주자
싱글톤도 참조개수를 카운팅해야하기 때문에 delete -> Realease
unsigned long으로 바꿔주기
device	  와 devicecontext 2개의 장치를 받아옴
메모리 할당   바인딩 실행
스왑체인이 디바이스가 필요하다 메모리 할당을 해야하기 때문에
InputDevice 추가
--------------------------------------------------------

2022-11-03

레벨매니저 제작
--------------------------------------------------------

2022-11-04
Loader 처리
GameObj , Layer , ObjectMgr 
--------------------------------------------------------

2022-11-07
ObjectMgr 기능 추가

--------------------------------------------------------

2022-11-08
컴포넌트 추가
depth stencil 화면에 그릴려고 했던 픽셀들의 깊이를 저장.

blend 연산

vSourColor, vDestColor
vSourColor.rgb * vSourColor.a + vDestColor.rgb * (1.f - vSourColor.a)

불투명한 -> 투명한

이펙트 이미지가 투명 불투명으로 완전히 나누어지지않으면 블렌드

3D 파편들 같은것들

파티클 (비) 알파블렌드 먹어야함

나무모델 나뭇잎은 사각화면 (나뭇잎은 후면추려내기 꺼야함)
사각형 2개를 크로스해서 그려줌 이건 절대 블렌딩하면 안됨

--------------------------------------------------------

2022-11-09
렌더러 컴포넌트 
컴포넌트매니저

--------------------------------------------------------
2022-11-10
BufferDesc.Usage 동적으로 활용할 떄에 D3D11_USAGE_DYNAMIC;
정적은 D3D11_USAGE_STATIC
Shader 추가

--------------------------------------------------------
2022-11-11
쉐이더 기능 추가

--------------------------------------------------------
2022-11-14

같은 정점을 이용하는 경우 하나의 쉐이더로 이용 가능하다.

다른 효과를 부여하고싶을 때 pass를 늘려서 사용할 수 있다.

직교 투영을 하기위한 작업을 진행해야함

GeometryShader, HullShader, DomainShader DX11에 추가된 쉐이더

float4x4는 단순 행렬을 저장하기 위한 자료형이라고 생각하면 좋을 것 같다

XMMatrixIdentity는 항등행렬을 리턴 

XMVECTOR 128비트 

XMFLOAT4(구조체로) != XMVECTOR(통체로 128)

XMFLOAT4는 각각의 x,y,z,w를 접근가능하지만 4번의 비트연산을 통해 덧셈을 해야하기에 XMVECTOR의 기능들을 활용해야한다.(연산을 빨리하기 위해)

스택에 있는 변수들만 연산이 가능하다. (XMVECTOR, XMMATRIX는 힙연산 불가 하고 지역변수로서만 선언을 요구함(MSDN))

XMVECTOR는 한번의 비트연산으로 덧셈연산을 수행한다.

주소를 활용한 계산은 방지하기.

XMMATRIX != XMFLOAT4x4

setvalue로 전치행렬받고 하는 것이 아닌 setMatrix에 매트릭스로 던지므로써 전치행렬을 안해줘도됨 함수 안에서 전치해줌

함수인자로 사용할때  FXMVECTOR를 활용한다. (1개 ~ 3개) 함수인자가 벡터인 것에 대해서만~


-------------------------------------------------------
2022-11-15
transform 강화
texture 
format format -> generate mipmap -> 그담에 저장~ 
DxTex.exe

TK 개발환경에 따른 솔루션켜고 빌드 debug x64 release x64 모두 
bin -> debug DirectxTK.lib DirectxTKd.lib로 이름변경
release 

-------------------------------------------------------
2022-11-16
hlsl 수업 
sampler AddressU,AddressV
wrap은  1보다 커지면 0부터 다시시작
clamp는 1보다 커지면 1고정

terrain

-------------------------------------------------------
2022-11-17

뷰매트릭스와 투영행렬을 보관하기 위해 파이프라인 제작 싱글톤으로

카메라 제작

기존 오브젝트들에게 따로 추가했어야할 트랜스픔 컴포넌트들을 오브젝트에 넣어주고시작.
그 다음에 staticLevel은 이제 존재하지않는다. 아니 존재하지만 LEVEL_END 직전에 담아두고있는다
-------------------------------------------------------
2022-11-18

카메라
조명에 관한 이론적인 이야기
-------------------------------------------------------
2022-11-21

조명
명암 - 그라우드 쉐이딩 (VS) , 퐁 쉐이딩(PS)
saturate 또는 max로 0 ~ 1 강제로 밀어넣을 수 있음

In.vNormal도 월드스페이스까지 올려줘야함 그 이후에 곱해준다. -> 월드스페이스에 존재하는 노말이여야하기 때문에
-------------------------------------------------------
2022-11-22
퐁보다는 그라우드에서 진행하는 것이 최적화가 더 좋음

포워드 쉐이딩으로는 다중광원으로 처리하는것은 굉장히 안좋은 방법
이기에 디퍼드 쉐이딩으로 해야한다.

방향성 광원은 포워드로해도 크게 상관없지 않을까 싶다.
-------------------------------------------------------
2022-11-23
헤이트맵 저장관련
이미지 처리
-------------------------------------------------------
2022-11-24
플레이어
assimp 5.0.1 라이브러리 설치후
cmake로 어떤 파일의 압축을 풀것이냐 프로젝트 자체를 경로로
어디에 풀것이냐 assimp build에 넣어준다.
어떤 프로젝트에 맞게끔 해제할 것이냐 x64 
generate 눌러주고
이러면 솔루션 파일이 생성됨 디버그 빌드, 릴리즈 빌드 ㄱㄱ
code - debug에는 dll, lib파일들 존재 release도 dll, lib
thirdpartylib에는 lib
실행파일에 dll
헤더 파일 include 에 그냥 그대로 가져오기
assimp 5.0.1 include를 include에

바이너리화 시켜주자.
-------------------------------------------------------
2022-11-25
모델, 메쉬

getTexture () 에 있는 index 인자는 diffuse가 1개 이상을 가지고 있을때를 대비해서 있는 인자이다.
-------------------------------------------------------
2022-11-28
애니메이션 기초

-------------------------------------------------------
2022-12-01

뼈의 이름을 알고있어야한다. 뼈는 많은 정보를 가지고있다.(ex 충돌체)

-------------------------------------------------------
2022-12-02

애니메이션 틀 다 잡음

